sub <- subset(dt, Date == as.Date("2007-02-01"))
View(data)
source('~/.active-rstudio-document', echo=TRUE)
sub <- subset(dt, as.POSIXct(Date) == asPOSIXct("2007-02-01"))
dt[dt$Date %in% as.Date(c("2007-02-01", "2007-02-02"))]
dt[dt$Date %in% as.Date(c("2007-02-01", "2007-02-02"), origin = dt$Date)]
dt[dt$Date %in% as.Date(c("2007-02-01", "2007-02-02"), "dd/mm/yyyy"]
dt[dt$Date %in% as.Date(c("2007-02-01", "2007-02-02"), "dd/mm/yyyy")]
dt[as.Date(c("2007-02-01", "2007-02-02"), "dd/mm/yyyy")]
dt[as.Date(c('2007-02-01', '2007-02-02'), "dd/mm/yyyy")]
dt['01/02/2007',]
dt["01/02/2007",]
setkey(dt, Date)
dt["01/02/2007",]
View(dt)
source('~/.active-rstudio-document', echo=TRUE)
View(dt)
View(dt)
dt["1/2/2007",]
source('~/.active-rstudio-document', echo=TRUE)
dt["1/2/2007",]
dt[c("1/2/2007", "2/2/2007"),]
source('~/.active-rstudio-document', echo=TRUE)
setkey(dt, Date)
dt[c("1/2/2007", "2/2/2007"),]
dt[dt$Date %in% as.Date(c("2007-02-01","2007-02-02"), "d/m/yyyy")]
dt[as.Date(c("2007-02-01","2007-02-02"), "d/m/yyyy"),]
require(data.table)
setwd("~/Workspaces//ExData_Plotting1")
dt <- fread("./household_power_consumption.txt")
setkey(dt, Date)
dt[dt$Date %in% as.Date(c("2007-02-01","2007-02-02"), "d/m/yyyy")]
as.Date(c("2007-02-01","2007-02-02"), "d/m/yyyy")
as.Date(c("2007-02-01"), "d/m/yyyy")
as.Date(c("2007-02-01"), "dd/mm/yyyy")
as.Date("2007-02-01", "dd/mm/yyyy")
data <- dt[c("1/2/2007", "2/2/2007"),]
?hist
hist(data)
hist(data$V4)
hist(data$4)
hist(data$Global_active_power)
data$Global_active_power
class(data$Global_active_power)
hist(as.numeric(data$Global_active_power))
title(main="Global Active Power", xlab="Global Active Power (kilowatts)")
?hist
hist(as.numeric(data$Global_active_power), col="red")
hist(as.numeric(data$Global_active_power), col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
png("plot1.png", width=480, height=480, units="pixel")
png("plot1.png", width=480, height=480, units="px")
hist(as.numeric(data$Global_active_power), col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.off()
?plot
plot(data$Date, data$Global_active_power)
plot(data$Date, data$Global_active_power,type = "l")
plot(data$Time, data$Global_active_power, type = "l")
plot(data$Date:Time, data$Global_active_power, type = "l")
plot(data$Date:data$Time, data$Global_active_power, type = "l")
plot(data$Date:data$Time, as.numeric(data$Global_active_power), type = "l")
source('~/.active-rstudio-document', echo=TRUE)
plot(data$Time, as.numeric(data$Global_active_power), type = "l", ylb = "Global Active Power (kilowatts)")
plot(data$Date:data$Time, as.numeric(data$Global_active_power), type = "l")
?lines
?axis
axis(1, at=1:3, lab-c("Thu","Fri","Sat"))
axis(1, at=1:3, lab=c("Thu","Fri","Sat"))
lines(as.numeric(data$Global_active_power), type = "l", ylab = "Global Active Power (kilowatts)")
box()
lines(as.numeric(data$Global_active_power), type = "l", ylab = "Global Active Power (kilowatts)")
plot(as.numeric(data$Global_active_power), type = "l", ylab = "Global Active Power (kilowatts)")
axis(1, at=1:3, lab=c("Thu","Fri","Sat"))
?plot
require(data.table)
setwd("~/Workspaces//ExData_Plotting1")
dt <- fread("./household_power_consumption.txt")
setkey(dt, Date)
data <- dt[c("1/2/2007", "2/2/2007"),]
plot(as.numeric(data$Global_active_power), type = "l", ylab = "Global Active Power (kilowatts)")
plot(as.numeric(data$Global_active_power), type = "l", xaxt = 'n', ylab = "Global Active Power (kilowatts)")
axis(1, at=1:3, lab=c("Thu","Fri","Sat"))
plot(as.numeric(data$Global_active_power), type = "l", xaxt = c("Thu","Fri","Sat"), ylab = "Global Active Power (kilowatts)")
plot(as.numeric(data$Global_active_power), type = "l", xaxt = 'n', ylab = "Global Active Power (kilowatts)")
plot(as.numeric(data$Global_active_power), type = "l", xaxt = 'n', xlab = NULL, ylab = "Global Active Power (kilowatts)")
plot(as.numeric(data$Global_active_power), type = "l", xaxt = 'n', ylab = "Global Active Power (kilowatts)")
axis(1, at=1:3, lab=c("Thu","Fri","Sat"))
axis(1, xaxp=c("Thu","Fri","Sat"))
axis(1, xaxp=c("Thu","Fri","Sat"), las=2)
axis(1, at=1:3, labels=c("Thu","Fri","Sat"))
axis(1, at=x, labels=c("Thu","Fri","Sat"))
axis(1, labels=c("Thu","Fri","Sat"))
axis(1, at=c(1, 50, 100), labels=c("Thu","Fri","Sat"))
axis(1, at=c(1, 2, as.POSIXct(data$Time[-1])), labels=c("Thu","Fri","Sat"))
data$Time
data$Time[-1]
data$Time(1)
data$Time[1,]
class(data$Time)
as.POSIXct(data$Time)
as.Date(data$Time)
as.Time(data$Time)
data$Time[1:2,]
data$Time[1,]
data$Time[1,1]
data$Time[,1]
length(data$Time)
axis(1, at=c(1, length(data$Time)/2, length(data$Time)), as.POSIXct(data$Time[-1])), labels=c("Thu","Fri","Sat"))
axis(1, at=c(1, length(data$Time)/2, length(data$Time)), labels=c("Thu","Fri","Sat"))
?fread
source('~/.active-rstudio-document', echo=TRUE)
source("./plot1.R")
setkey(dt, Date)
data <- dt[c("1/2/2007", "2/2/2007"),]
png("plot2.png", width=480, height=480, units="px")
plot(as.numeric(data$Global_active_power), type = "l", xaxt = 'n', ylab = "Global Active Power (kilowatts)")
axis(1, at=c(1, length(data$Time)/2, length(data$Time)), labels=c("Thu","Fri","Sat"))
dev.off()
png("plot2.png", width=480, height=480, units="px")
plot(as.numeric(data$Global_active_power), type = "l", xaxt = 'n', xlab=NULL, ylab = "Global Active Power (kilowatts)")
axis(1, at=c(1, length(data$Time)/2, length(data$Time)), labels=c("Thu","Fri","Sat"))
dev.off()
plot(as.numeric(data$Global_active_power), type = "l", xaxt =NULL, xlab=NULL, ylab = "Global Active Power (kilowatts)")
plot(as.numeric(data$Global_active_power), type = "l", xaxt = "n", xlab = "", ylab = "Global Active Power (kilowatts)")
axis(1, at=c(1, length(data$Time)/2, length(data$Time)), labels=c("Thu","Fri","Sat"))
dev.off()
source('~/Dropbox/Workspaces/ExData_Plotting1/plot1.R', echo=TRUE)
source('~/Dropbox/Workspaces/ExData_Plotting1/plot1.R', echo=TRUE)
source('~/Dropbox/Workspaces/ExData_Plotting1/plot1.R', echo=TRUE)
plot(as.numeric(data$Sub_metering_1), type = "l", xaxt = "n", xlab = "", ylab = "Energy sub metering")
linest(as.numeric(data$Sub_metering_2))
lines(as.numeric(data$Sub_metering_2))
lines(as.numeric(data$Sub_metering_2), col="red")
lines(as.numeric(data$Sub_metering_3), col="blue")
axis(1, at=c(1, length(data$Time)/2, length(data$Time)), labels=c("Thu","Fri","Sat"))
legend(400, 400)
?legend
legend("topright", legent = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), pch = 1)
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), pch = 2)
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), pch = 20)
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), pch = -, col = c("black", "red", "blue"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), pch = 1, col = c("black", "red", "blue"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"))
legend("topright",
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col=c("black", "red", "blue"),
cex=1.2)
?legend
legend("topright",
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col=c("black", "red", "blue"),
trace=TRUE)
legend("topright",
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col=c("black", "red", "blue"),
seg.len = 2)
plot(as.numeric(data$Sub_metering_1), type = "l", xaxt = "n", xlab = "", ylab = "Energy sub metering")
lines(as.numeric(data$Sub_metering_2), col="red")
lines(as.numeric(data$Sub_metering_3), col="blue")
axis(1, at=c(1, length(data$Time)/2, length(data$Time)), labels=c("Thu","Fri","Sat"))
legend("topright",
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col=c("black", "red", "blue"),
seg.len = 2)
legend("topright",
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col=c("black", "red", "blue"),
lty = 2)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("rjson")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("RJSONIO")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(RJSONIO)
library(RCurl)
# grab the data
raw_data <- getURL("http://api.crunchbase.com/v/2/organizations?user_key=<c74cae3169511f025fa95caf64a8fd73>&order=updated_at%20desc")
raw_data
raw_data <- getURL("http://api.crunchbase.com/v/2/organizations?user_key=<c74cae3169511f025fa95caf64a8fd73>")
length(data)
source('~/Dropbox/Workspaces/crunchbase/cb.R', echo=TRUE)
install.packages("devtools")
clear
?fread
library(data.table)
?fread
dt <- fread("")
setwd("~/Workspaces//RepData_PeerAssessment1")
dt <- fread("activity.csv")
summary(dt)
head(dt)
str(dt)
unique(dt$date)
?table
table(dt$date)
table(dt$date, dt$steps)
date <- unique(dt$date)
steppd <- sapply(date, FUN = function(X) sum(date == X)))
sapply(dt$steps, FUN = function(X) sum(date == X) )
sapply(dt$steps, sum(date == X) )
sapply(dt$steps, sum(date) )
sapply(dt$steps, sum )
?aggregate
aggregate(dt, date, sum)
aggregate(x = dt, by = date, FUN = "sum")
aggregate(x = dt, by = dt$date, FUN = "sum")
aggregate(x = dt, by = as.list(dt$date), FUN = "sum")
aggregate(x = dt$steps, by = list(data, steps), FUN = "sum")
aggregate(x = dt$steps, by = list(date, steps), FUN = "sum")
aggregate(x = dt$steps, by = list(dt$date, dt$steps), FUN = "sum")
aggregate(x = dt$steps, by = list(dt$date, dt$steps), FUN = "sum")
aggregate(dt)
aggregate(dt$stemps)
aggregate(dt$steps)
aggregate(dt$steps,list(date=dt$date),"sum")
stpd <- aggregate(dt$steps,list(date=dt$date),"sum")
stpd <- stpd[complete.cases(stpd)]
stpd <- stpd[complete.cases(stpd),]
stpd
hist(stpd)
library(ggplot2)
qplot(date, data=stpd, geom="histogram")
?hist
hist(stpd$V2)
hist(stpd$X2)
hist(stpd$x)
library(ggplot2)
g <- ggplot(stpd, aes(x=date, y=x))
g + goem_histogram()
qplot(date, data=stpd, geom="histogram", binwidth=0.1)
qplot(date, data=stpd, weight=steps,geom="histogram", binwidth=0.1)
qplot(date, data=stpd, weight=steps, geom="histogram", binwidth=0.1)
library(ggplot2)
library(ggplot2)
g <- ggplot(stpd, aes(x=date, y=x))
g + geom_histogram()
g + geom_histogram(binwidth=1)
g + geom_histogram(binwidth=0.1)
qplot(steps, data=stpd, geom="histogram")
t
t
t
t
dt <- dt <- fread("activity.csv")
## What is mean total number of steps taken per day?
date <- unique(dt$date)
stpd <- aggregate(dt$steps,list(date=dt$date),"sum")
stpd <- stpd[complete.cases(stpd),]
qplot(steps, data=stpd, geom="histogram")
hist(stpd, xlab = "number of steps")
hist(stpd$steps, xlab = "number of steps")
hist(stpd$x, xlab = "number of steps")
main(stpd$x)
head(dt)
activity$interval
dt.interval
dt$interval
length(activity$date)
length(dt$date)
levels(dt$date)
?tapply
stpavg <- aggregate(dt$steps, list(interval=dt$interval), "sum")
View(stpavg)
interval <- unique(dt$interval)
View(stpavg)
stpavg <- aggregate(dt$steps, list(interval=dt$interval), "sum")
View(stpavg)
interval <- unique(dt$interval)
step_avg <- aggregate(dt$steps,list(interval=dt$interval),"sum")
View(stpavg)
View(stpavg)
View(step_avg)
View(stpd)
View(stpavg)
View(step_avg)
View(stpavg)
View(stpd)
View(stpavg)
View(stpd)
View(stpavg)
View(step_avg)
activity$interval <- as.factor(activity$interval)
dt$interval <- as.factor(dt$interval)
step_average <- tapply(activity$steps, activity$interval, sum,         na.rm = TRUE, simplify = TRUE)/length(levels(activity$date))
step_average <- tapply(dt$steps, dt$interval, sum,         na.rm = TRUE, simplify = TRUE)/length(levels(dt$date))
View(stpavg)
View(step_avg)
require(data.table)
dt <- fread("activity.csv")
dt$interval <- as.factor(dt$interval)
step_average <- tapply(dt$steps, dt$interval, sum,         na.rm = TRUE, simplify = TRUE)/length(levels(dt$date))
View(step_avg)
dt$interval <- as.factor(dt$interval)
View(dt)
str(dt)
step_average <- tapply(dt$steps, dt$interval, sum, na.rm = TRUE, simplify = TRUE)
dt <- fread("activity.csv")
dt$interval <- as.factor(dt$interval)
step_average <- tapply(dt$steps, dt$interval, sum, na.rm = TRUE, simplify = TRUE)
step_average <- tapply(dt$steps, dt$interval, sum, na.rm = TRUE, simplify = TRUE)/ nrow(dt$date)
nrow(dt$date)
levels(dt$date)
date <- unique(dt$date)
length(date)
plot(x = levels(dt$interval), y = step_avg, type = "1", xlab = "time", ylab = "number of steps", main = "average number of steps taken in 5-minute interval across all days"
plot(x = levels(dt$interval), y = step_avg, type = "1", xlab = "time", ylab = "number of steps", main = "average number of steps taken in 5-minute interval across all days")
plot(x = levels(dt$interval), y = step_avg, type = "l", xlab = "time", ylab = "number of steps", main = "average number of steps taken in 5-minute interval across all days")
step_avg <- tapply(dt$steps, dt$interval, sum, na.rm = TRUE, simplify = TRUE)/ length(date)
plot(x = levels(dt$interval), y = step_avg, type = "l", xlab = "time", ylab = "number of steps", main = "average number of steps taken in 5-minute interval across all days")
max(step_avg)
dt[x=max(step_avg),]
dt[dt$steps=max(step_avg),"date"]
dt[dt$step==max(step_avg),"date"]
dt[dt$steps=max(step_avg]
dt[dt$steps=max(step_avg)]
dt[dt$steps==max(step_avg)]
dt[dt$steps==max(dt$steps)]
max(dt$steps)
dt
dt$steps
max(dt$steps)
max(dt$steps, rm.na=TRUE)
max(step_avg)
dt$interval <- as.factor(dt$interval)
step_avg <- tapply(dt$steps, dt$interval, sum, na.rm = TRUE, simplify = TRUE)/ length(date)
step_avg <- aggregate(steps ~ interval, dt, mean)
View(step_avg)
?aggregate
help(~)
help("~")
View(step_avg)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
step_per_day <- aggregate(steps ~ date, dt, sum)
step_avg[step_avg$steps == max(step_avg$steps)]
step_avg <- aggregate(steps ~ interval, dt, mean)
step_avg[step_avg$steps == max(step_avg$steps)]
max(step_avg$steps)
step_avg$steps == max(step_avg$steps)
!complete.cases(dt)
complete.cases(dt)
nrow(!complete.cases(dt))
sum(!complete.cases(dt))
View(dt)
install.packages("mi")
library(mi)
mi(dt)
dt
View(dt)
dt2<-dt
dt2
dt2$steps[is.na(dt2$steps)] <- 0
dt2
dt2$steps[dt2$steps==0] <- step_avg$steps[step_avg$interval == dt2$interval]
for (i in 1:nrow(dt)){
dt2
if (is.na(dt$steps[i])){
interval_val <- dt$interval[i]
steps_val <- step_avg$steps[step_avg$interval == interval_val,]
dt$steps[i] <- steps_val
}
}
nrow(dt)
dt
source('~/.active-rstudio-document', echo=TRUE)
View(dt)
dt <- fread("activity.csv")
source('~/.active-rstudio-document', echo=TRUE)
new_dt$weekday <- weekday(new_dt$date)
new_dt$weekday <- weekdays(new_dt$date)
?weekdays
new_dt$weekday <- weekdays(as.date(new_dt$date))
new_dt$weekday <- weekdays(as.data.frame(new_dt$date))
new_dt$date <- as.Date(new_dt$date, "%Y-%m-%d")
new_dt$weday <-
d
new_dt$day <- weekdays(dt$date)
new_dt$day <- weekdays(new_dt$date)
?ifelse
new_dt$date <- as.Date(new_dt$date, "%Y-%m-%d")
new_dt$day <- weekdays(new_dt$date)
new_dt$weekday <- ifelse(new_dt$day == ""Saturday"" || new_dt$day == ""Sunday"", FALSE, TRUE )
new_dt$weekday <- ifelse(new_dt$day == "Saturday" || new_dt$day == "Sunday", FALSE, TRUE )
View(new_dt)
new_dt
new_dt[new_dt$day == "Sunday"]
new_dt$weekday <- ifelse(new_dt$day == "Saturday" || new_dt$day == "Sunday", FALSE, TRUE )
new_dt[new_dt$day == "Sunday"]
new_dt[new_dt$weekday]
str(new_dt)
table(dt$weekday)
summary(dt$weekday)
summary(dt)
new_dt$day == "Saturday"
new_dt$weekday <- !(new_dt$day == "Saturday" || new_dt$day == "Sunday")
new_dt[new_dt$weekday]
new_dt[new_dt$weekday == FALSE]
new_dt$day == "Saturday" || new_dt$day == "Sunday"
new_dt$weekday <- !(new_dt$day == "Saturday" || new_dt$day == "Sunday")
new_dt$day == "Saturday"
new_dt[new_dt$weekday == FALSE]
new_dt[new_dt$weekday == TRUE]
new_dt[new_dt$day == Sunday]
new_dt[new_dt$day == "Sunday"]
source('~/.active-rstudio-document', echo=TRUE)
new_dt[new_dt$day == Sunday]
new_dt[new_dt$day == "Sunday"]
new_dt$weekday <- isWeekday{new_dt$date}
install.packages("timeDate")
library(timeDate)
new_dt$date <- as.Date(new_dt$date, "%Y-%m-%d")
new_dt$day <- weekdays(new_dt$date)
new_dt$weekday <- isWeekday(new_dt$date)
new_dt[new_dt$day == "Sunday"]
table(new_dt$weekday, new_dt$day)
table(new_dt$weekday, new_dt)
table(new_dt$weekday)
new_dt$weekday <- ifelse(isWeekday(new_dt$date), "weekday", "weekend")
table(new_dt$weekday)
new_dt$weekday <- as.factor(new_dt$weekday)
new_step_interval <- aggregate(steps ~ interval+day_type, mean)
new_step_interval <- aggregate(steps ~ interval+weekday, mean)
new_step_interval <- aggregate(steps ~ interval+weekday, mean)
new_step_interval <- aggregate(steps ~ interval+weekday, new_dt, mean)
new_step_interval
facet_wrap(~weekday, ncol=1)
?qplot
qplot(interval, steps, data=new_step_interval, gnom=c("line"),
xlab="Interval", ylab="Number of steps", mean="") +
facet_wrap(~weekday, ncol=1)
qplot(interval, steps, data=new_step_interval, gnom=c("point"),
xlab="Interval", ylab="Number of steps", mean="") +
facet_wrap(~weekday, ncol=1)
?rm
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
table(step_per_day$steps)
source('~/.active-rstudio-document', echo=TRUE)
g <- ggplot(step_avg, aes(x=interval, y=steps))
+ scale_x_continous(name=c("time"))
+ geom_line()
library(ggplot2)
g <- ggplot(step_avg, aes(x=interval, y=steps))
+ scale_x_continous(name=c("time"))
+ geom_line()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(ggplot2)
g <- ggplot(step_avg, aes(x=interval, y=steps))
+ scale_x_continuous(name=c("time"))
+ geom_line()
```
table(step_per_day$)
label <- seq(from=0, to=12)
label
label + "am"
c(paste(seq(from=0, to=11), "am"))
c(paste(seq(from=0, to=11),"AM", sep=""))
c(paste(paste(seq(from=0, to=11),"AM", sep=""), "noon", paste(seq(from=1, to=11),"PM", sep="")))
c(paste(seq(from=0, to=11),"AM", sep=""), "noon", paste(seq(from=1, to=11),"PM", sep=""))
c(paste(seq(from=0, to=11),"AM", sep=""), "NOON", paste(seq(from=1, to=11),"PM", sep=""))
seq(from=0, to=2355, by=60)
labels <- c(paste(seq(from=0, to=11),"AM", sep=""), "NOON", paste(seq(from=1, to=11),"PM", sep=""))
length(labels)
labels2 <- seq(from=0, to=2355, by=60)
length(labels2)
View(step_per_day)
View(step_avg)
labels2 <- seq(from=0, to=2300, by=100)
length(labels2)
labels2
library(ggplot2)
g <- ggplot(step_avg, aes(x=interval, y=steps))
+ scale_x_continuous(name="time", break=seq(from=0, to=2300, by=100)
library(ggplot2)
g <- ggplot(step_avg, aes(x=interval, y=steps))
+ scale_x_continuous(name="time", break=c(seq(from=0, to=2300,by=100))
+ scale_x_continuous(name="time", break=c(seq(from=0, to=2300,by=100)))
library(ggplot2)
g <- ggplot(step_avg, aes(x=interval, y=steps))
+ geom_line()
g + geom_line()
g + scale_x_continuous(name="time", break=c(seq(from=0, to=2300,by=100)))
g + scale_x_continuous(name="time", break=seq(0,2300,100)))
library(ggplot2)
g <- ggplot(step_avg, aes(x=interval, y=steps))
g + geom_line()
g + scale_x_continuous(name="time", break=seq(0,2300,100)))
g + scale_x_continuous(name="time", breaks=seq(0,2300,100)))
```
library(ggplot2)
g <- ggplot(step_avg, aes(x=interval, y=steps))
g + geom_line()
g + scale_x_continuous(name="time", breaks=seq(0,2300,100))
```
library(ggplot2)
g <- ggplot(step_avg, aes(x=interval, y=steps))
g + scale_x_continuous(name="time", breaks=seq(0,2300,100))
g + geom_line()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
